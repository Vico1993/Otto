name: CI

on:
    push:
        branches:
            - main
        paths-ignore:
            - "*.md"
            - "/**/*.md"
            - ".github/*"
    pull_request:
        branches:
            - main

env:
    TESTCOVERAGE_THRESHOLD: 90
    GO_VERSION: 1.20.2

jobs:
    deps:
        name: Ensure Deps
        runs-on: ubuntu-latest
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go`
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Verify Deps
              run: go mod verify

            - name: Build Deps
              run: go mod download

    test:
        name: Test
        needs: deps
        runs-on: ${{ matrix.os }}
        strategy:
            # Fail fast is disabled because there are Go version specific features and tests
            # that should be able to fail independently.
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest]
        env:
            COVERALLS_PARALLEL: true
            COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        steps:
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  persist-credentials: false
                  fetch-depth: 0

            - name: Test
              run: |
                  go test -covermode=count -coverprofile=coverage.out ./...
                  go tool cover -func=coverage.out -o=coverage.out

            - name: Go Coverage Badge # Pass the `coverage.out` output to this action
              uses: tj-actions/coverage-badge-go@v2
              with:
                  filename: coverage.out

            - name: Verify Changed files
              uses: tj-actions/verify-changed-files@v12
              if: matrix.os == "ubuntu-latest"
              id: verify-changed-files
              with:
                  files: README.md

            - name: Commit changes
              if: steps.verify-changed-files.outputs.files_changed == 'true' && matrix.os == "ubuntu-latest"
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git add README.md
                  git commit -m "chore: Updated coverage badge."

            - name: Push changes
              if: steps.verify-changed-files.outputs.files_changed == 'true' && matrix.os == "ubuntu-latest"
              uses: ad-m/github-push-action@master
              with:
                  github_token: ${{ github.token }}
                  branch: ${{ github.head_ref }}

    lint:
        name: Lint
        runs-on: ubuntu-latest
        needs: deps
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Lint
              uses: golangci/golangci-lint-action@v3
              with:
                  version: latest

            - name: Vet
              run: |
                  go vet ./...

    build:
        name: build
        needs: deps
        runs-on: ubuntu-latest
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Ensure project compiles
              run: make build
