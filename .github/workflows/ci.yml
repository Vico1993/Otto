name: CI

on:
    pull_request:
        branches:
            - main
        paths:
            - "**.go"

env:
    TESTCOVERAGE_THRESHOLD: 90
    GO_VERSION: 1.20.2
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    deps:
        name: Ensure Deps
        runs-on: ubuntu-latest
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go`
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Verify Deps
              run: go mod verify

            - name: Build Deps
              run: go mod download

    test:
        name: Test
        needs: deps
        runs-on: ${{ matrix.os }}
        strategy:
            # Fail fast is disabled because there are Go version specific features and tests
            # that should be able to fail independently.
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest]
        env:
            COVERALLS_PARALLEL: true
            COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        steps:
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  persist-credentials: false
                  fetch-depth: 0

            - name: Test
              run: |
                  go test -race -covermode atomic -coverprofile=profile.cov ./...

            - name: Install goveralls
              run: go install github.com/mattn/goveralls@latest

            - name: Send coverage
              uses: shogo82148/actions-goveralls@v1
              with:
                  path-to-profile: profile.cov
                  flag-name: Go-${{ matrix.os }}
                  parallel: true

    # notifies that all test jobs are finished.
    finish:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - uses: shogo82148/actions-goveralls@v1
              with:
                  parallel-finished: true

    lint:
        name: Lint
        runs-on: ubuntu-latest
        needs: deps
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Lint
              uses: golangci/golangci-lint-action@v3
              with:
                  version: latest

            - name: Vet
              run: |
                  go vet ./...

    build:
        name: build
        needs: deps
        runs-on: ubuntu-latest
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Ensure project compiles
              run: make build

    version:
        name: Update version
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Bump version
              uses: Vico1993/bump-version-using-labels@main
              with:
                  file_path: "manifest.json"
                  major_label: "#major"
                  minor_label: "#minor"
                  patch_label: "#patch"

    #         - name: Bump version and push tag
    #           id: tag_version
    #           uses: anothrNick/github-tag-action@1.65.0
    #           env:
    #               WITH_V: true
    #               DRY_RUN: true

    #         - name: Find if bot already commented
    #           uses: peter-evans/find-comment@v2
    #           id: find-comment
    #           with:
    #               issue-number: ${{ github.event.pull_request.number }}
    #               comment-author: "github-actions[bot]"
    #               body-includes: |
    #                   Once PR Merged, the new version will be :

    #         - name: Create or update comment from bot
    #           uses: peter-evans/create-or-update-comment@v3
    #           with:
    #               comment-id: ${{ steps.find-comment.outputs.comment-id }}
    #               issue-number: ${{ github.event.pull_request.number }}
    #               body: |
    #                   Once PR Merged, the new version will be : ${{ steps.tag_version.outputs.new_tag }}
    #               edit-mode: replace
    #               reactions: |
    #                   +1
    #                   hooray
