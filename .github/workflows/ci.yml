name: CI

on:
    pull_request:
        branches:
            - main
        paths:
            - "**.go"
            - "**.json"

env:
    TESTCOVERAGE_THRESHOLD: 90
    GO_VERSION: 1.20.2
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    deps:
        name: Ensure Deps
        runs-on: ubuntu-latest
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go`
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Verify Deps
              run: go mod verify

            - name: Build Deps
              run: go mod download

    test:
        name: Test
        needs: deps
        runs-on: ${{ matrix.os }}
        strategy:
            # Fail fast is disabled because there are Go version specific features and tests
            # that should be able to fail independently.
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest]

        steps:
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  persist-credentials: false
                  fetch-depth: 0

            - name: Test
              run: |
                  go test -race -covermode atomic -coverprofile=coverage-${{ matrix.os }}.cov ./...

            - uses: actions/cache@v3
              with:
                  path: ./coverage-${{ matrix.os }}.cov
                  key: coverage-${{ matrix.os }}

    # notifies that all test jobs are finished.
    finish:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Install gcov to lcov
              run: |
                  go install github.com/jandelgado/gcov2lcov@latest

            - uses: actions/cache@v3
              with:
                  path: ./coverage-ubuntu-latest.cov
                  key: coverage-ubuntu-latest

            - name: Convert the gocov into lcov
              run: gcov2lcov -infile=coverage-ubuntu-latest.cov -outfile=coverage.lcov

            - name: Check lcov
              uses: romeovs/lcov-reporter-action@v0.2.16
              with:
                  lcov-file: coverage.lcov
                  github-token: ${{ env.GITHUB_TOKEN }}

    lint:
        name: Lint
        runs-on: ubuntu-latest
        needs: deps
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Lint
              uses: golangci/golangci-lint-action@v3
              with:
                  version: latest

            - name: Vet
              run: |
                  go vet ./...

    build:
        name: build
        needs: deps
        runs-on: ubuntu-latest
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Ensure project compiles
              run: make build

    version:
        name: Update version
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Bump version
              env:
                  ACTIONS_STEP_DEBUG: true
                  ACTIONS_RUNNER_DEBUG: true
              uses: apomalyn/bump-version-using-labels@v1.5.0
              with:
                  file_path: "manifest.json"
                  major_label: "#major"
                  minor_label: "#minor"
                  patch_label: "#patch"
                  use_tag_as_ref: true
